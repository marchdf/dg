I think that the prioritites when I get back are: 
- Limiting in 2D
- GPU/MPI capabilities
- compilation on nyx

OUTPUT
  - Inefficient to build a matrix to output it...
  - Add capability to output in the .txt format that gmsh can generate too
  - Clean output functions: unmerge them would be smart I think (same rational as for the flux functions)
  - Make into a class to do this?

INITIAL CONDITIONS
  - Clean initial conditions
  - Design some generic ICs that can be made in the deck (maybe a LR state thing for now)

RIEMANN SOLVERS
  - Optimize Riemann solvers. I think they are inefficient. Also, make the 1D closer to the 2D implementation
  - Add an entropy fix for Roe (http://www.cfdbooks.com/cfdcodes/oned_euler_fluxes_v4.f90)
  - add HLLC
  
LIMITING
  - It's a very ugly implementation right now...
  - I have powersXYZG and V1D, could I combine the two to avoid ifdefs?
  - code TaylorDerivative (kernel), DerivativeIdx (main.cc), integrateincell (kernel)
  - ifdefs on dims in HRL, MYL, M2L
  - move some of these functions to .cc files?
  - write the cpu_hrl2d function
  - Get a 1D/2D version: put ifdef ONED in header file so I can call the class the same thing (Limiting)

PARALLEL
  - Make MPI capable

2D PHYSICS
  - passive/multifluid HLL
  - boundary conditions: do they work? are they correct? combine farfield et periodic?

NYX
  - Can my code compile and run on nyx?
	
OTHER
  - Add CFL condition
  - Clean if conditions on dimensions: they are all over the place. Can they be reduced?
  - Create some 2D benchmarks? 
  - Remove cpu_ in the function names (not necessary now)
  - Boundary conditions for farfield are a little strange?
  - Add a compilation error check